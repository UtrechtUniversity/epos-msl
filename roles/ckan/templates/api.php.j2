<?php
/**
 * - Author
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(author:%22brown%22)
 *
 * - Keyword
 * https://epos-msl.ckan.test/api/3/action/package_search?fq=(tags:%22FAULT%20MOVEMENT%22)
 *
 * - Title
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(title:%22compilation%22)
 *
 * - Description
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(notes:%22earthquake%22)
 *
 * - Lab
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(organization:"other-lab")
 *
 * - Contact
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_Datasetcontact:%22korte%22)
 *
 * - References
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_References:%22marone%22)
 *
 * - SupplementTo
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_Issupplementto:%22Gori%22)
 *
 * - Cites
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_Cites:%22Gori%22)
 *
 * - Publisher
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_Publisher:%22gfz%22)
 *
 * - PublicationYear
 * https://epos-msl.ckan.test/api/3/action/package_search?q=(extras_Publicationdate:%222017%22)
 *
 * Later:
 * - DOI
 * - Institution
**/

parse_str($_SERVER['QUERY_STRING'], $querystring);

// EXAMPLE: https://epos-msl.ckan.test/ics/api.php?Author=rosenau&Title=quartz&Keywords=Force%20sensor&PublicationYear=2018

$fieldMapping = array(
        'Author'           => 'author',
        'Keywords'         => 'tags',
        'Title'            => 'title',
        'Description'      => 'notes',
        'Lab'              => 'organization',
        'Dataset_contact'  => 'extras_Datasetcontact',
        'References'       => 'extras_References',
        'Is_Supplement_To' => 'extras_Issupplementto',
        'Cites'            => 'extras_Cites',
        'Publisher'        => 'extras_Publisher',
        'PublicationYear'  => 'extras_Publicationdate'
);

$solrQuery = [];
foreach ($querystring as $param => $value) {
    if (array_key_exists($param, $fieldMapping)) {
        $param = $fieldMapping[$param];

        //str_replace(' ', '%20', $value)

        $solrQuery[] = sprintf(
            '(%s:"%s")',
            $param,
            $value
        );
    }
}

$api_url = sprintf(
    'https://localhost/api/3/action/package_search?q=%s',
    implode(' AND ', $solrQuery)
);

$s = file_get_contents(str_replace(' ', '%20', $api_url));

$response = json_decode($s, JSON_OBJECT_AS_ARRAY);
$countDPs = 0;
$totalDPs = array();

if ($response['success'] == 1){
	if ($response['result']['count']>0) {
		$results = $response['result']['results'];

		foreach ($results as $result) {
			$tags = array();
			foreach ($result['tags'] as $tag) {
				$tags[] = $tag['name'];
			}
			$subDomains = array();
			foreach ($result['groups'] as $subDomain) {
				$subDomains = $subDomain['display_name'];
			}

			//geoJSON - bounding box
			$bbX1 = 0;
			$bbY1 = 0;
			$bbX2 = 0;
			$bbY2 = 0;

			$dpData = array(
					'Title'            => $result['title'],
					'Description'      => $result['notes'],
					'Author'           => $result['author'],
					'Keywords'         => $tags,
					'Subdomain'        => $subDomains,
					'Lab'              => $result['organization']['title'],

					'Publisher'        => $result['maintainer'], // provided by
					'Publisher_email'  => $result['maintainer_email'], //
					'Url'              => $result['url'],
					'License'          => $result['license_title'],
			);

			foreach ($result['extras'] as $extra) {  //pairs are enumerated
			   if (substr($extra['key'],0,7)!='harvest') {
					if (substr($extra['key'],0,6)=='geobox') {
						// Fill the coordinates with floats
						$val = floatval($extra['value']);
						switch ($extra['key']) {
							case 'geobox-eLong':
								$bbX1 = $val;
								break;
							case 'geobox-nLat':
								$bbY1 = $val;
								break;
							case 'geobox-wLong':
								$bbX2 = $val;
								break;
							case 'geobox-sLat':
								$bbY2 = $val;
						}
					}
					else {
						$dpData[$extra['key']] = $extra['value'];
					}
			   }
			}

			$geoJSON = array(
			   'type' => 'Feature',
			   'properties' => $dpData,
			   'geometry' => array(
					'type' => 'Polygon',
					'coordinates' => array(
						array(
							array($bbX1,$bbY1), array($bbX2,$bbY1), array($bbX2,$bbY2), array($bbX1,$bbY2),array($bbX1,$bbY1)
						)
					)
			   )
			);

			$totalDPs[] = $geoJSON;
			$countDPs += 1;
		}
	}
}

echo json_encode($totalDPs);
exit;
