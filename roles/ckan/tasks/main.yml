---
# copyright Utrecht University

- name: Ensure CKAN prerequisites are installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - xml-commons
    - postgresql-server
    - postgresql-devel
    - postgresql
    - python-devel
    - libxslt
    - libxslt-devel
    - libxml2
    - libxml2-devel
    - python-virtualenv
    - gcc
    - gcc-c++
    - make
    - xalan-j2
    - unzip
    - policycoreutils-python
    - mod_wsgi
    - httpd
    - redis


- name: Ensure Redis is running and enabled
  service:
    name: redis
    state: started
    enabled: yes


- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present


- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s


- user:
    name: ckan
    comment: "CKAN User"
    home: /usr/lib/ckan
    shell: /bin/bash
    groups: wheel
    append: yes


- name: Create CKAN database
  become_user: postgres
  become: yes
  postgresql_db:
    name: "ckan_default"
    encoding: UTF-8
    lc_collate: en_US.utf8
    lc_ctype: en_US.utf8
    template: template0


- name: Create CKAN database user
  become_user: postgres
  become: yes
  postgresql_user:
    db: "ckan_default"
    name: "ckan_default"
    password: "pass"
    priv: ALL


- name: Allow Apache to connect to Postgresql in SELinux config
  seboolean:
    name: httpd_can_network_connect_db
    state: yes
    persistent: yes


- file:
    path: /usr/lib/ckan
    state: directory
    mode: 0755
    owner: ckan

- file:
    path: /usr/lib/ckan/default
    state: directory
    mode: 0755
    owner: ckan

- file:
    path: /etc/ckan
    state: directory
    mode: 0755
    owner: ckan

- file:
    path: /etc/ckan/default
    state: directory
    mode: 0755
    owner: ckan


- name: Run CKAN installation script
  become_user: ckan
  shell: |
    virtualenv --no-site-packages default
    . default/bin/activate
    pip install --upgrade pip
    pip install -U setuptools
    pip install --ignore-installed -e git+https://github.com/okfn/ckan.git@ckan-2.7.2#egg=ckan
    pip install --ignore-installed -r default/src/ckan/pip-requirements-docs.txt
    exit
    creates=/usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml
  register: ckan_installed


- name: Ensure CKAN config is present
  template:
    src: "development.ini.j2"
    dest: "/etc/ckan/default/development.ini"


- name: Run CKAN post installation scripts
  become_user: root
  become: yes
  shell: |
    ln -s /usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml /var/solr/data/ckan/conf/schema.xml
    semanage port -a -t http_port_t -p tcp 8983
    service solr restart
    su -s /bin/bash - ckan
    cd /usr/lib/ckan
    . default/bin/activate
    cd default/src/ckan
    paster db init -c /etc/ckan/default/development.ini
    ln -s /usr/lib/ckan/default/src/ckan/who.ini /etc/ckan/default/who.ini
    exit
  when: ckan_installed.changed
  

- name: Ensure WSGI specification for CKAN is present
  template:
    src: "apache.wsgi.j2"
    dest: "/etc/ckan/default/apache.wsgi"
  notify: Restart Apache webserver


- name: Ensure EPOS-MSL virtual host config for Apache is present
  template:
    src: "epos-msl-vhost.conf.j2"
    dest: "/etc/httpd/conf.d/epos-msl-vhost.conf"
  notify: Restart Apache webserver
