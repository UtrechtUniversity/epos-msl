# This is a locally modified version of the upstream CKAN docker compose file.
#
# This default version runs the MSL-API web server and queue worker in the same
# container.

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  ckan_coveragedata:
  pg_data:
  solr_data:
  nginx_config:
  mslapi_signal:
  mslapi_storage:
  ckan_api_key:

services:
  ckan:
     container_name: ckan
     image: ghcr.io/utrechtuniversity/epos-msl-cat-ckan:latest
     links:
       - db
       - solr
       - redis
     depends_on:
       - db
       - solr
       - redis
     ports:
       - "5000"
     environment:
       - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan_default
       - CKAN_SOLR_URL=http://solr:8983/solr/ckan
       - CKAN_REDIS_URL=redis://redis:6379/1
       - CKAN_SITE_URL=${CKAN_SITE_URL}
       - CKAN_DATABASE_PASSWORD=${CKAN_DATABASE_PASSWORD}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     volumes:
       - ckan_api_key:/ckan_api_key
       - ckan_config:/etc/ckan
       - ckan_home:/usr/lib/ckan
       - ckan_storage:/var/lib/ckan
       - ckan_coveragedata:/coverage

  nginx:
    container_name: nginx
    image: ghcr.io/utrechtuniversity/epos-msl-cat-nginx:latest
    environment:
      - EPOS_MSL_HOST=${EPOS_MSL_HOST}
      - EPOS_MSL_HOST_PORT=${EPOS_MSL_HOST_PORT}
      - MTA_ROLE=${MTA_ROLE}
    ports:
      - "${EPOS_MSL_HOST_IP}:${EPOS_MSL_HOST_PORT}:443"
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - nginx_config:/etc/nginx/conf.d
      - ./import-certificates:/etc/import-certificates

  db:
    container_name: db
    image: postgres:12.20
    environment:
      - POSTGRES_DB=ckan_default
      - POSTGRES_USER=ckan
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data

  mslapi_db:
    container_name: mslapi_db
    image: mysql:8.0.39-debian
    environment:
      -  MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  # In this Docker Compose setup, the web server container runs both
  # the MSL-API web application and the queue worker.
  mslapi_webserver:
    container_name: mslapi_web
    image: ghcr.io/utrechtuniversity/epos-msl-cat-mslapi:latest
    ports:
      - "80"
    environment:
      -  MSLAPI_FAST_API_TOKEN=${FAST_API_TOKEN}
      -  MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      -  EPOS_MSL_HOST=${EPOS_MSL_HOST}
      -  EPOS_MSL_HOST_PORT=${EPOS_MSL_HOST_PORT}
      -  MSLAPI_DB_PASSWORD=${MSLAPI_DB_PASSWORD}
      -  MSLAPI_ROLE=BOTH
      -  MSLAPI_MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
    volumes:
      -  ckan_api_key:/ckan_api_key
      -  mslapi_signal:/signal
      -  mslapi_storage:/storage
      -  ./import-msl-api-seed-data:/var/msl-api-seed-data

  solr:
    container_name: solr
    image: ghcr.io/utrechtuniversity/epos-msl-cat-solr:latest
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data

  redis:
    container_name: redis
    image: redis:6.2

  mta:
    container_name: mta
    image: ghcr.io/utrechtuniversity/epos-msl-cat-mta:latest
    environment:
      -  MTA_ROLE=${MTA_ROLE}
      -  POSTFIX_RELAYHOST_FQDN=${POSTFIX_RELAYHOST_FQDN}
      -  POSTFIX_RELAYHOST_PORT=${POSTFIX_RELAYHOST_PORT}
      -  POSTFIX_RELAYHOST_USERNAME=${POSTFIX_RELAYHOST_USERNAME}
      -  POSTFIX_RELAYHOST_PASSWORD=${POSTFIX_RELAYHOST_PASSWORD}
      -  POSTFIX_RELAYHOST_AUTH_ENABLED=${POSTFIX_RELAYHOST_AUTH_ENABLED}
      -  POSTFIX_RELAYHOST_TLS_ENABLED=${POSTFIX_RELAYHOST_TLS_ENABLED}
      -  POSTFIX_MYHOSTNAME=${POSTFIX_MYHOSTNAME}
      -  POSTFIX_ORIGIN=${POSTFIX_ORIGIN}
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
